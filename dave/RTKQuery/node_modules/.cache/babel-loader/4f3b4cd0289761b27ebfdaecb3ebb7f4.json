{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const apiSlice = createApi({\n  reducerPath: \"api\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:3500\"\n  }),\n  tagTypes: [\"Todos\"],\n  endpoints: builder => ({\n    getTodos: builder.query({\n      query: () => \"/todos\",\n      providesTags: [\"Todos\"]\n    }),\n    addTodo: builder.mutation({\n      query: todo => ({\n        url: \"/todos\",\n        method: \"POST\",\n        body: todo\n      }),\n      invalidatesTags: [\"Todos\"]\n    }),\n    updateTodo: builder.mutation({\n      query: todo => ({\n        url: `/todos/${todo.id}`,\n        method: \"PATCH\",\n        body: todo\n      }),\n      invalidatesTags: [\"Todos\"]\n    }),\n    deleteTodo: builder.mutation({\n      query: _ref => {\n        let {\n          id\n        } = _ref;\n        return {\n          url: `/todos/${id}`,\n          method: \"DELETE\",\n          body: id\n        };\n      },\n      invalidatesTags: [\"Todos\"]\n    })\n  })\n});\nexport const {\n  useGetTodosQuery,\n  useAddTodoMutation,\n  useUpdateTodoMutation,\n  useDeleteTodoMutation\n} = apiSlice;","map":{"version":3,"sources":["/Users/jinwoohan/Documents/GitHub/redux-in-action/dave/RTKQuery/src/features/api/apiSlice.js"],"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","getTodos","query","providesTags","addTodo","mutation","todo","url","method","body","invalidatesTags","updateTodo","id","deleteTodo","useGetTodosQuery","useAddTodoMutation","useUpdateTodoMutation","useDeleteTodoMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;AAChCG,EAAAA,WAAW,EAAE,KADmB;AAEhCC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAFO;AAGhCC,EAAAA,QAAQ,EAAE,CAAC,OAAD,CAHsB;AAIhCC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAc;AACtBA,MAAAA,KAAK,EAAE,MAAM,QADS;AAEtBC,MAAAA,YAAY,EAAE,CAAC,OAAD;AAFQ,KAAd,CADa;AAKvBC,IAAAA,OAAO,EAAEJ,OAAO,CAACK,QAAR,CAAiB;AACxBH,MAAAA,KAAK,EAAGI,IAAD,KAAW;AAChBC,QAAAA,GAAG,EAAE,QADW;AAEhBC,QAAAA,MAAM,EAAE,MAFQ;AAGhBC,QAAAA,IAAI,EAAEH;AAHU,OAAX,CADiB;AAMxBI,MAAAA,eAAe,EAAE,CAAC,OAAD;AANO,KAAjB,CALc;AAavBC,IAAAA,UAAU,EAAEX,OAAO,CAACK,QAAR,CAAiB;AAC3BH,MAAAA,KAAK,EAAGI,IAAD,KAAW;AAChBC,QAAAA,GAAG,EAAG,UAASD,IAAI,CAACM,EAAG,EADP;AAEhBJ,QAAAA,MAAM,EAAE,OAFQ;AAGhBC,QAAAA,IAAI,EAAEH;AAHU,OAAX,CADoB;AAM3BI,MAAAA,eAAe,EAAE,CAAC,OAAD;AANU,KAAjB,CAbW;AAqBvBG,IAAAA,UAAU,EAAEb,OAAO,CAACK,QAAR,CAAiB;AAC3BH,MAAAA,KAAK,EAAE;AAAA,YAAC;AAAEU,UAAAA;AAAF,SAAD;AAAA,eAAa;AAClBL,UAAAA,GAAG,EAAG,UAASK,EAAG,EADA;AAElBJ,UAAAA,MAAM,EAAE,QAFU;AAGlBC,UAAAA,IAAI,EAAEG;AAHY,SAAb;AAAA,OADoB;AAM3BF,MAAAA,eAAe,EAAE,CAAC,OAAD;AANU,KAAjB;AArBW,GAAd;AAJqB,CAAD,CAA1B;AAoCP,OAAO,MAAM;AACXI,EAAAA,gBADW;AAEXC,EAAAA,kBAFW;AAGXC,EAAAA,qBAHW;AAIXC,EAAAA;AAJW,IAKTvB,QALG","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const apiSlice = createApi({\n  reducerPath: \"api\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:3500\" }),\n  tagTypes: [\"Todos\"],\n  endpoints: (builder) => ({\n    getTodos: builder.query({\n      query: () => \"/todos\",\n      providesTags: [\"Todos\"],\n    }),\n    addTodo: builder.mutation({\n      query: (todo) => ({\n        url: \"/todos\",\n        method: \"POST\",\n        body: todo,\n      }),\n      invalidatesTags: [\"Todos\"],\n    }),\n    updateTodo: builder.mutation({\n      query: (todo) => ({\n        url: `/todos/${todo.id}`,\n        method: \"PATCH\",\n        body: todo,\n      }),\n      invalidatesTags: [\"Todos\"],\n    }),\n    deleteTodo: builder.mutation({\n      query: ({ id }) => ({\n        url: `/todos/${id}`,\n        method: \"DELETE\",\n        body: id,\n      }),\n      invalidatesTags: [\"Todos\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetTodosQuery,\n  useAddTodoMutation,\n  useUpdateTodoMutation,\n  useDeleteTodoMutation,\n} = apiSlice;\n"]},"metadata":{},"sourceType":"module"}