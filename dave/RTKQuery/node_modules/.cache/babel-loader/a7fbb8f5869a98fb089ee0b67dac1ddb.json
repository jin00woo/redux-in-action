{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const apiSlice = createApi({\n  reducerPath: \"api\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:3500\"\n  }),\n  endpoints: builder => ({\n    getTodos: builder.query({\n      query: () => \"/todos\"\n    }),\n    addTodo: builder.mutation({\n      query: todo => ({\n        url: \"/todos\",\n        method: \"POST\",\n        body: todo\n      })\n    }),\n    updateTodo: builder.mutation({\n      query: todo => ({\n        url: `/todos/${todo.id}`\n      })\n    })\n  })\n});\nexport const {\n  useGetTodosQuery\n} = apiSlice;","map":{"version":3,"sources":["/Users/jinwoohan/Documents/GitHub/redux-in-action/dave/RTKQuery/src/features/api/apiSlice.js"],"names":["createApi","fetchBaseQuery","apiSlice","reducerPath","baseQuery","baseUrl","endpoints","builder","getTodos","query","addTodo","mutation","todo","url","method","body","updateTodo","id","useGetTodosQuery"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;AAChCG,EAAAA,WAAW,EAAE,KADmB;AAEhCC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAFO;AAGhCC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AACvBC,IAAAA,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAc;AACtBA,MAAAA,KAAK,EAAE,MAAM;AADS,KAAd,CADa;AAIvBC,IAAAA,OAAO,EAAEH,OAAO,CAACI,QAAR,CAAiB;AACxBF,MAAAA,KAAK,EAAGG,IAAD,KAAW;AAChBC,QAAAA,GAAG,EAAE,QADW;AAEhBC,QAAAA,MAAM,EAAE,MAFQ;AAGhBC,QAAAA,IAAI,EAAEH;AAHU,OAAX;AADiB,KAAjB,CAJc;AAWvBI,IAAAA,UAAU,EAAET,OAAO,CAACI,QAAR,CAAiB;AACzBF,MAAAA,KAAK,EAAGG,IAAD,KAAW;AACdC,QAAAA,GAAG,EAAG,UAASD,IAAI,CAACK,EAAG;AADT,OAAX;AADkB,KAAjB;AAXW,GAAd;AAHqB,CAAD,CAA1B;AAsBP,OAAO,MAAM;AAAEC,EAAAA;AAAF,IAAuBhB,QAA7B","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const apiSlice = createApi({\n  reducerPath: \"api\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:3500\" }),\n  endpoints: (builder) => ({\n    getTodos: builder.query({\n      query: () => \"/todos\",\n    }),\n    addTodo: builder.mutation({\n      query: (todo) => ({\n        url: \"/todos\",\n        method: \"POST\",\n        body: todo,\n      }),\n    }),\n    updateTodo: builder.mutation({\n        query: (todo) => ({\n            url: `/todos/${todo.id}`,\n        })\n    })\n  }),\n});\n\nexport const { useGetTodosQuery } = apiSlice;\n"]},"metadata":{},"sourceType":"module"}