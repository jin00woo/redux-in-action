{"ast":null,"code":"var _jsxFileName = \"/Users/jinwoohan/Documents/GitHub/redux-in-action/dave/optimization/src/features/posts/AddPostForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewPost } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPostForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState('');\n  const [addRequestStatus, setAddRequestStatus] = useState('idle');\n  const users = useSelector(selectAllUsers);\n\n  const onTitleChanged = e => setTitle(e.target.value);\n\n  const onContentChanged = e => setContent(e.target.value);\n\n  const onAuthorChanged = e => setUserId(e.target.value);\n\n  const canSave = [title, content, userId].every(Boolean) && addRequestStatus === 'idle';\n\n  const onSavePostClicked = () => {\n    if (canSave) {\n      try {\n        setAddRequestStatus('pending');\n        dispatch(addNewPost({\n          title,\n          body: content,\n          userId\n        })).unwrap();\n        setTitle('');\n        setContent('');\n        setUserId('');\n        navigate('/');\n      } catch (err) {\n        console.error('Failed to save the post', err);\n      } finally {\n        setAddRequestStatus('idle');\n      }\n    }\n  };\n\n  const usersOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postAuthor\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"postAuthor\",\n        value: userId,\n        onChange: onAuthorChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), usersOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        disabled: !canSave,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddPostForm, \"tblzZjdvgr+cxHOvj+HMTkXHHdQ=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = AddPostForm;\nexport default AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"sources":["/Users/jinwoohan/Documents/GitHub/redux-in-action/dave/optimization/src/features/posts/AddPostForm.js"],"names":["useState","useDispatch","useSelector","addNewPost","selectAllUsers","useNavigate","AddPostForm","dispatch","navigate","title","setTitle","content","setContent","userId","setUserId","addRequestStatus","setAddRequestStatus","users","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","canSave","every","Boolean","onSavePostClicked","body","unwrap","err","console","error","usersOptions","map","user","id","name"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { addNewPost } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AddPostForm = () => {\n    const dispatch = useDispatch()\n\n    const navigate = useNavigate()\n\n    const [title, setTitle] = useState('')\n    const [content, setContent] = useState('')\n    const [userId, setUserId] = useState('')\n    const [addRequestStatus, setAddRequestStatus] = useState('idle')\n\n    const users = useSelector(selectAllUsers)\n\n    const onTitleChanged = e => setTitle(e.target.value)\n    const onContentChanged = e => setContent(e.target.value)\n    const onAuthorChanged = e => setUserId(e.target.value)\n\n\n    const canSave = [title, content, userId].every(Boolean) && addRequestStatus === 'idle';\n\n    const onSavePostClicked = () => {\n        if (canSave) {\n            try {\n                setAddRequestStatus('pending')\n                dispatch(addNewPost({ title, body: content, userId })).unwrap()\n\n                setTitle('')\n                setContent('')\n                setUserId('')\n                navigate('/')\n            } catch (err) {\n                console.error('Failed to save the post', err)\n            } finally {\n                setAddRequestStatus('idle')\n            }\n        }\n\n    }\n\n    const usersOptions = users.map(user => (\n        <option key={user.id} value={user.id}>\n            {user.name}\n        </option>\n    ))\n\n    return (\n        <section>\n            <h2>Add a New Post</h2>\n            <form>\n                <label htmlFor=\"postTitle\">Post Title:</label>\n                <input\n                    type=\"text\"\n                    id=\"postTitle\"\n                    name=\"postTitle\"\n                    value={title}\n                    onChange={onTitleChanged}\n                />\n                <label htmlFor=\"postAuthor\">Author:</label>\n                <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\n                    <option value=\"\"></option>\n                    {usersOptions}\n                </select>\n                <label htmlFor=\"postContent\">Content:</label>\n                <textarea\n                    id=\"postContent\"\n                    name=\"postContent\"\n                    value={content}\n                    onChange={onContentChanged}\n                />\n                <button\n                    type=\"button\"\n                    onClick={onSavePostClicked}\n                    disabled={!canSave}\n                >Save Post</button>\n            </form>\n        </section>\n    )\n}\nexport default AddPostForm"]},"metadata":{},"sourceType":"module"}