{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nconst initialState = [];\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  const response = await axios.get(USERS_URL);\n  return response.data;\n});\nconst usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {},\n\n  extraReducers(builder) {\n    builder.addCase(fetchUsers.fulfilled, (state, action) => {\n      return action.payload;\n    });\n  }\n\n});\nexport const selectAllUsers = state => state.users;\nexport default usersSlice.reducer;","map":{"version":3,"sources":["/Users/jinwoohan/Documents/GitHub/redux-in-action/dave/optimization/src/features/users/usersSlice.js"],"names":["createSlice","createAsyncThunk","axios","USERS_URL","initialState","fetchUsers","response","get","data","usersSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","selectAllUsers","users","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAG,4CAAlB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CAAC,kBAAD,EAAqB,YAAY;AACvE,QAAMK,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUJ,SAAV,CAAvB;AACA,SAAOG,QAAQ,CAACE,IAAhB;AACH,CAHyC,CAAnC;AAKP,MAAMC,UAAU,GAAGT,WAAW,CAAC;AAC3BU,EAAAA,IAAI,EAAE,OADqB;AAE3BN,EAAAA,YAF2B;AAG3BO,EAAAA,QAAQ,EAAE,EAHiB;;AAI3BC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACnBA,IAAAA,OAAO,CAACC,OAAR,CAAgBT,UAAU,CAACU,SAA3B,EAAsC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrD,aAAOA,MAAM,CAACC,OAAd;AACH,KAFD;AAGH;;AAR0B,CAAD,CAA9B;AAWA,OAAO,MAAMC,cAAc,GAAIH,KAAD,IAAWA,KAAK,CAACI,KAAxC;AAEP,eAAeX,UAAU,CAACY,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nconst initialState = []\n\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n    const response = await axios.get(USERS_URL);\n    return response.data\n})\n\nconst usersSlice = createSlice({\n    name: 'users',\n    initialState,\n    reducers: {},\n    extraReducers(builder) {\n        builder.addCase(fetchUsers.fulfilled, (state, action) => {\n            return action.payload;\n        })\n    }\n})\n\nexport const selectAllUsers = (state) => state.users;\n\nexport default usersSlice.reducer"]},"metadata":{},"sourceType":"module"}