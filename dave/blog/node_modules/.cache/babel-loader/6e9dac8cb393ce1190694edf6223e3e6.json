{"ast":null,"code":"var _jsxFileName = \"/Users/jinwoohan/Documents/GitHub/redux-in-action/dave/blog/src/features/posts/AddPostForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addNewPost } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPostForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [addRequestStatus, setAddRequestStatus] = useState(\"idle\");\n  const users = useSelector(selectAllUsers);\n\n  const onTitleChanged = e => setTitle(e.target.value);\n\n  const onContentChanged = e => setContent(e.target.value);\n\n  const onAuthorChanged = e => setUserId(e.target.value);\n\n  const canSave = [title, content, userId].every(Boolean) && addRequestStatus === \"idle\";\n\n  const onSavePostClicked = () => {\n    if (canSave) {\n      try {\n        setAddRequestStatus(\"pending\");\n        dispatch(addNewPost({\n          title,\n          body: content,\n          userId\n        })).unwrap();\n        setTitle(\"\");\n        setContent(\"\");\n        setUserId(\"\");\n        navigate(\"/\");\n      } catch (err) {\n        console.error(\"Failed to save the post\", err);\n      } finally {\n        setAddRequestStatus(\"idle\");\n      }\n    }\n  };\n\n  const usersOptions = users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: user.id,\n    children: user.name\n  }, user.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postAuthor\",\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"postAuthor\",\n        value: userId,\n        onChange: onAuthorChanged,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), usersOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        disabled: !canSave,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPostForm, \"0AmMRUrVWvqlrY9XI4zSm7D6i2s=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = AddPostForm;\nexport default AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"sources":["/Users/jinwoohan/Documents/GitHub/redux-in-action/dave/blog/src/features/posts/AddPostForm.js"],"names":["useState","useDispatch","useSelector","addNewPost","selectAllUsers","useNavigate","AddPostForm","dispatch","navigate","title","setTitle","content","setContent","userId","setUserId","addRequestStatus","setAddRequestStatus","users","onTitleChanged","e","target","value","onContentChanged","onAuthorChanged","canSave","every","Boolean","onSavePostClicked","body","unwrap","err","console","error","usersOptions","map","user","id","name"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { addNewPost } from \"./postsSlice\";\nimport { selectAllUsers } from \"../users/usersSlice\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AddPostForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [addRequestStatus, setAddRequestStatus] = useState(\"idle\");\n\n  const users = useSelector(selectAllUsers);\n\n  const onTitleChanged = (e) => setTitle(e.target.value);\n  const onContentChanged = (e) => setContent(e.target.value);\n  const onAuthorChanged = (e) => setUserId(e.target.value);\n\n  const canSave =\n    [title, content, userId].every(Boolean) && addRequestStatus === \"idle\";\n\n  const onSavePostClicked = () => {\n    if (canSave) {\n      try {\n        setAddRequestStatus(\"pending\");\n        dispatch(addNewPost({ title, body: content, userId })).unwrap();\n\n        setTitle(\"\");\n        setContent(\"\");\n        setUserId(\"\");\n        navigate(\"/\");\n      } catch (err) {\n        console.error(\"Failed to save the post\", err);\n      } finally {\n        setAddRequestStatus(\"idle\");\n      }\n    }\n  };\n\n  const usersOptions = users.map((user) => (\n    <option key={user.id} value={user.id}>\n      {user.name}\n    </option>\n  ));\n\n  return (\n    <section>\n      <h2>Add a New Post</h2>\n      <form>\n        <label htmlFor=\"postTitle\">Post Title:</label>\n        <input\n          type=\"text\"\n          id=\"postTitle\"\n          name=\"postTitle\"\n          value={title}\n          onChange={onTitleChanged}\n        />\n        <label htmlFor=\"postAuthor\">Author:</label>\n        <select id=\"postAuthor\" value={userId} onChange={onAuthorChanged}>\n          <option value=\"\"></option>\n          {usersOptions}\n        </select>\n        <label htmlFor=\"postContent\">Content:</label>\n        <textarea\n          id=\"postContent\"\n          name=\"postContent\"\n          value={content}\n          onChange={onContentChanged}\n        />\n        <button type=\"button\" onClick={onSavePostClicked} disabled={!canSave}>\n          Save Post\n        </button>\n      </form>\n    </section>\n  );\n};\nexport default AddPostForm;\n"]},"metadata":{},"sourceType":"module"}